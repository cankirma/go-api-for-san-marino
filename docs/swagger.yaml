basePath: /api
definitions:
  entities.Category:
    properties:
      category_id:
        type: integer
      category_name:
        type: string
      description:
        type: string
      picture:
        type: string
    type: object
  entities.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password_hash:
        type: string
      updated_at:
        type: string
      user_role:
        type: string
      user_status:
        type: integer
    required:
    - email
    - id
    - password_hash
    - user_role
    - user_status
    type: object
info:
  contact:
    email: your@mail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API
  version: "1.0"
paths:
  /v1/category:
    delete:
      consumes:
      - application/json
      description: Category  by given ID.
      parameters:
      - description: category ID
        in: body
        name: id
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Category  by given ID
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create a new category.
      parameters:
      - description: CategoryId
        in: body
        name: CategoryId
        required: true
        schema:
          type: primitive
      - description: CategoryName
        in: body
        name: CategoryName
        required: true
        schema:
          type: primitive
      - description: Description
        in: body
        name: Description
        required: true
        schema:
          type: primitive
      - description: Picture
        in: body
        name: Picture
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      security:
      - ApiKeyAuth: []
      summary: creates a new category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update Category.
      parameters:
      - description: CategoryId
        in: body
        name: CategoryId
        required: true
        schema:
          type: primitive
      - description: CategoryName
        in: body
        name: CategoryName
        required: true
        schema:
          type: primitive
      - description: Description
        in: body
        name: Description
        required: true
        schema:
          type: primitive
      - description: Picture
        in: body
        name: Picture
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "202":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update Category
      tags:
      - Category
  /v1/category/{id}:
    get:
      consumes:
      - application/json
      description: Get Category by given ID.
      parameters:
      - description: CategoryID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      summary: get Category by given ID
      tags:
      - Category
  /v1/category/getall:
    get:
      consumes:
      - application/json
      description: Get all exists category.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Category'
            type: array
      summary: gets all exists category
      tags:
      - Category
  /v1/token/renew:
    post:
      consumes:
      - application/json
      description: Renew access and refresh tokens.
      parameters:
      - description: Refresh token
        in: body
        name: refresh_token
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: renew access and refresh tokens
      tags:
      - Token
  /v1/user/sign/in:
    post:
      consumes:
      - application/json
      description: Auth user and return access and refresh token.
      parameters:
      - description: User Email
        in: body
        name: email
        required: true
        schema:
          type: primitive
      - description: User Password
        in: body
        name: password
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: auth user and return access and refresh token
      tags:
      - User
  /v1/user/sign/out:
    post:
      consumes:
      - application/json
      description: De-authorize user and delete refresh token from Redis.
      produces:
      - application/json
      responses:
        "204":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: de-authorize user and delete refresh token from Redis
      tags:
      - User
  /v1/user/sign/up:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: primitive
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: primitive
      - description: User role
        in: body
        name: user_role
        required: true
        schema:
          type: primitive
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
      summary: creates a new user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
